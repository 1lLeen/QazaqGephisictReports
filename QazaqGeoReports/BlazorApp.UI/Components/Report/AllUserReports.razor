@page "/Report/AllReports"
@attribute [Authorize(Roles = "Admin,Supervisor,General")]

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using QazaqGeoReports.Domain.Entities
@using QazaqGeoReports.Domain.Interfaces.Services

@inject AuthenticationStateProvider AuthStateProvider
@inject IReportService ReportService
@inject IUserService UserService
<h3>Все отчеты</h3>

@if (reports == null)
{
    <p>Загрузка...</p>
}
else if (!reports.Any())
{
    <p>Отчеты не найдены.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Название</th>
                <th>Дата</th>
                <th>Автор</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var report in reportViewModels)
            {
                <tr>
                    <td>@report.Report.Title</td>
                    <td>@report.Report.CreatedTime</td>
                    <td>@report.UserName</td>
                    <td>
                        <a class="btn btn-primary" href="/Report/Details/@report.Report.Id">Подробнее</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<a href="/Report/Create" class="btn btn-lg btn-success d-flex align-items-center gap-2 shadow-sm px-4 py-2" style="font-weight: 600; font-size: 1.1rem; border-radius: 12px;">
    <i class="bi bi-plus-circle-fill" style="font-size: 1.4rem;"></i>
    <span>Создать отчёт</span>
</a>

@code {
    private List<Report> reports;
    private List<User> users;
    private List<ReportViewModel> reportViewModels;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        reportViewModels = new List<ReportViewModel>();
        if (!user.Identity?.IsAuthenticated ?? true)
        {
            reports = new List<Report>();
            return;
        }    
        reports = await ReportService.GetAllAsync();
        foreach(var report in reports)
        {
            var reportUser = await UserService.GetUserByIdAsync(report.CreatedByUserId);
            reportViewModels.Add(new ReportViewModel
            {
                Report = report,
                UserName = $"{reportUser.FirstName} {reportUser.LastName} {reportUser.MiddleName}"
            });
        }
    }
    public class ReportViewModel
    {
        public Report Report { get; set; }
        public string UserName { get; set; }
    }
}
